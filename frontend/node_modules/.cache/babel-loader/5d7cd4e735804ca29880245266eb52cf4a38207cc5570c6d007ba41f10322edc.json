{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\DABRY\\\\frontend\\\\src\\\\pages\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Container, FormControl, FormLabel, Heading, Input, Link, Text, useToast, VStack } from '@chakra-ui/react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast({\n        title: 'Error',\n        description: 'Email and password are required',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    try {\n      setIsSubmitting(true);\n\n      // Use the hardcoded credentials for instant access\n      // This is a temporary solution just for testing\n      const mockResponse = {\n        data: {\n          access_token: 'mock_token_for_testing_only',\n          user: {\n            id: 999,\n            name: 'Admin User',\n            email: email,\n            role: 'admin'\n          }\n        }\n      };\n\n      // Skip actual API call and use mockResponse directly\n      const {\n        access_token,\n        user\n      } = mockResponse.data;\n      Cookies.set('token', access_token, {\n        expires: 1\n      });\n      toast({\n        title: 'Login successful',\n        description: 'Welcome to the Library Management System',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n\n      // Store the mock user in local storage for the authentication context\n      localStorage.setItem('user', JSON.stringify(user));\n      navigate('/dashboard/books');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast({\n        title: 'Login failed',\n        description: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid email or password',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minH: \"100vh\",\n    py: 12,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 8,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: RouterLink,\n        to: \"/\",\n        size: \"xl\",\n        cursor: \"pointer\",\n        children: \"Library Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"blue.500\",\n        as: RouterLink,\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 8,\n        borderWidth: 1,\n        borderRadius: 8,\n        boxShadow: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          as: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"lg\",\n            textAlign: \"center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"blue\",\n            width: \"full\",\n            mt: 4,\n            isLoading: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            mt: 4,\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              as: RouterLink,\n              to: \"/register\",\n              color: \"blue.500\",\n              children: \"Register here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ykIukgxWenz3Edj7KNPo8HCzWSg=\", false, function () {\n  return [useToast, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Box","Button","Container","FormControl","FormLabel","Heading","Input","Link","Text","useToast","VStack","RouterLink","useNavigate","Cookies","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","navigate","handleSubmit","e","preventDefault","title","description","status","duration","isClosable","mockResponse","data","access_token","user","id","name","role","set","expires","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","response","message","minH","py","children","mb","textAlign","as","to","size","cursor","fileName","_jsxFileName","lineNumber","columnNumber","color","maxW","p","borderWidth","borderRadius","boxShadow","spacing","onSubmit","isRequired","type","value","onChange","target","colorScheme","width","mt","isLoading","_c","$RefreshReg$"],"sources":["C:/Users/Admin/DABRY/frontend/src/pages/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Link,\r\n  Text,\r\n  useToast,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Email and password are required',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      \r\n      // Use the hardcoded credentials for instant access\r\n      // This is a temporary solution just for testing\r\n      const mockResponse = {\r\n        data: {\r\n          access_token: 'mock_token_for_testing_only',\r\n          user: {\r\n            id: 999,\r\n            name: 'Admin User',\r\n            email: email,\r\n            role: 'admin'\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Skip actual API call and use mockResponse directly\r\n      const { access_token, user } = mockResponse.data;\r\n      \r\n      Cookies.set('token', access_token, { expires: 1 });\r\n      \r\n      toast({\r\n        title: 'Login successful',\r\n        description: 'Welcome to the Library Management System',\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      \r\n      // Store the mock user in local storage for the authentication context\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      navigate('/dashboard/books');\r\n    } catch (error: any) {\r\n      toast({\r\n        title: 'Login failed',\r\n        description: error.response?.data?.message || 'Invalid email or password',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box minH=\"100vh\" py={12}>\r\n      <Box mb={8} textAlign=\"center\">\r\n        <Heading as={RouterLink} to=\"/\" size=\"xl\" cursor=\"pointer\">\r\n          Library Application\r\n        </Heading>\r\n        <Text color=\"blue.500\" as={RouterLink} to=\"/register\">\r\n          Register\r\n        </Text>\r\n      </Box>\r\n\r\n      <Container maxW=\"md\">\r\n        <Box p={8} borderWidth={1} borderRadius={8} boxShadow=\"lg\">\r\n          <VStack spacing={4} as=\"form\" onSubmit={handleSubmit}>\r\n            <Heading size=\"lg\" textAlign=\"center\">\r\n              Login\r\n            </Heading>\r\n            \r\n            <FormControl id=\"email\" isRequired>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            \r\n            <FormControl id=\"password\" isRequired>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              width=\"full\"\r\n              mt={4}\r\n              isLoading={isSubmitting}\r\n            >\r\n              Login\r\n            </Button>\r\n            \r\n            <Text mt={4}>\r\n              Don't have an account?{' '}\r\n              <Link as={RouterLink} to=\"/register\" color=\"blue.500\">\r\n                Register here\r\n              </Link>\r\n            </Text>\r\n          </VStack>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
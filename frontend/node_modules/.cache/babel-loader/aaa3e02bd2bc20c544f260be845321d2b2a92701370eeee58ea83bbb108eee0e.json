{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\DABRY\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { Spinner, Center } from '@chakra-ui/react';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n\n  // Force authentication to true for testing\n  const forceAuth = true;\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Allow access even without real authentication\n  if (forceAuth || isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"yb/FJYAIXt7wZoU4a4YvGQ4Nlsc=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","Spinner","Center","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","isLoading","forceAuth","h","children","size","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/Admin/DABRY/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { Box, Spinner, Center } from '@chakra-ui/react';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = () => {\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n  \r\n  // Force authentication to true for testing\r\n  const forceAuth = true;\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Center h=\"100vh\">\r\n        <Spinner size=\"xl\" />\r\n      </Center>\r\n    );\r\n  }\r\n\r\n  // Allow access even without real authentication\r\n  if (forceAuth || isAuthenticated) {\r\n    return <Outlet />;\r\n  }\r\n\r\n  return <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAAcC,OAAO,EAAEC,MAAM,QAAQ,kBAAkB;AACvD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAEhD;EACA,MAAMO,SAAS,GAAG,IAAI;EAEtB,IAAID,SAAS,EAAE;IACb,oBACEJ,OAAA,CAACH,MAAM;MAACS,CAAC,EAAC,OAAO;MAAAC,QAAA,eACfP,OAAA,CAACJ,OAAO;QAACY,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEb;;EAEA;EACA,IAAIP,SAAS,IAAIF,eAAe,EAAE;IAChC,oBAAOH,OAAA,CAACL,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;EAEA,oBAAOZ,OAAA,CAACN,QAAQ;IAACmB,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACV,EAAA,CApBID,cAAc;EAAA,QACqBH,OAAO;AAAA;AAAAiB,EAAA,GAD1Cd,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}